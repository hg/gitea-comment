#!/bin/sh

set -eu

note() {
  echo >&2 "NOTE: $*"
}

die() {
  echo >&2 "ERROR: $*"
  exit 1
}

[ -z "${GITEA_TOKEN:-}" ] && die 'GITEA_TOKEN not set'
[ -z "${GITEA_BASE:-}" ] && die 'GITEA_BASE not set'

# sanity checks; this shouldn't happen if we were called by Drone
[ -z "${DRONE_REPO_NAMESPACE:-}" ] && die 'DRONE_REPO_NAMESPACE not set'
[ -z "${DRONE_REPO_NAME:-}" ] && die 'DRONE_REPO_NAME not set'
[ -z "${DRONE_PULL_REQUEST:-}" ] && die 'DRONE_PULL_REQUEST not set'

if [ -n "${MESSAGE:-}" ]; then
  [ -z "${SUCCESS_MESSAGE:-}" ] || die 'please set either SUCCESS_MESSAGE or MESSAGE'
  [ -z "${FAILURE_MESSAGE:-}" ] || die 'please set either FAILURE_MESSAGE or MESSAGE'
  note 'using text from MESSAGE'
  message="$MESSAGE"
else
  if [ "$DRONE_STAGE_STATUS" = success ]; then
    note 'using text from SUCCESS_MESSAGE'
    message="${SUCCESS_MESSAGE:-}"
  else
    note 'using text from FAILURE_MESSAGE'
    message="${FAILURE_MESSAGE:-}"
  fi
fi

if [ -z "$message" ]; then
  die 'no message was passed; use either of
  message: this text is printed on success of failure
or
  success_message: this text is printed on success
  failure_message: this text is printed on failure'
fi

if [ -f "$message" ]; then
  note "reading message from file $message"
  message=$(cat "$message")
fi

body=$(mktemp)
resp=$(mktemp)

echo "$message" | envsubst | jq --raw-input '{ body: . }' >"$body"

curl \
  --location \
  --silent \
  --show-error \
  --fail-with-body \
  --header "Authorization: token $GITEA_TOKEN" \
  --json "@$body" \
  --output "$resp" \
  "$GITEA_BASE/api/v1/repos/$DRONE_REPO_NAMESPACE/$DRONE_REPO_NAME/issues/$DRONE_PULL_REQUEST/comments"

jq --color-output . <"$resp"

rm -f "$body" "$resp"
